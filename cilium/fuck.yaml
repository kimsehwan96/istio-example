apiVersion: v1
kind: Namespace
metadata:
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-gateway-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-gateway-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - tlsroutes
  - httproutes
  - referencegrants
  - referencepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - tlsroutes/status
  verbs:
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-gateway-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-gateway-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-gateway-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-gateway-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "true"
  bpf-lb-sock-hostns-only: "true"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-gateway-api: "true"
  enable-gateway-api-secrets-sync: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "true"
  gateway-api-secrets-namespace: cilium-secrets
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: shared
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  loadbalancer-l7: envoy
  loadbalancer-l7-algorithm: round_robin
  loadbalancer-l7-ports: ""
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {
      "node": {
        "id": "host~127.0.0.1~no-id~localdomain",
        "cluster": "ingress-cluster"
      },
      "staticResources": {
        "listeners": [
          {
            "name": "envoy-prometheus-metrics-listener",
            "address": {
              "socket_address": {
                "address": "0.0.0.0",
                "port_value": 9964
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-prometheus-metrics-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "prometheus_metrics_route",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "prometheus_metrics_route",
                                "match": {
                                  "prefix": "/metrics"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/stats/prometheus"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "envoy-health-listener",
            "address": {
              "socket_address": {
                "address": "127.0.0.1",
                "port_value": 9878
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-health-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "health",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "health",
                                "match": {
                                  "prefix": "/healthz"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/ready"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "clusters": [
          {
            "name": "ingress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "egress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "egress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "ingress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "xds-grpc-cilium",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "xds-grpc-cilium",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/xds.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "explicitHttpConfig": {
                  "http2ProtocolOptions": {}
                }
              }
            }
          },
          {
            "name": "/envoy-admin",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "/envoy-admin",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/admin.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "dynamicResources": {
        "ldsConfig": {
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        },
        "cdsConfig": {
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        }
      },
      "layeredRuntime": {
        "layers": [
          {
            "name": "static_layer_0",
            "staticLayer": {
              "overload": {
                "global_downstream_max_connections": 50000
              }
            }
          }
        ]
      },
      "admin": {
        "address": {
          "pipe": {
            "path": "/var/run/cilium/envoy/sockets/admin.sock"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU16Sk4yVzdmSzRybmVnejRWMGg0SVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE1UQTNNelExTVZvWERUSTNNREV4TURBMwpNelExTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T2NHSkdqMk5RdWlDTTZodExUS29uQWNmSnFkNjhZaGFTYTFHSUFHaEdLRVE5blIKN1hhRUZFTGlBdjVISktWTTU2WUlEVE1wTTZzdmM4UXFkeHFqelhmaGxwc3dFTGR0US9KMFZOUG05bGdIMmtIcQpCNVhSMTlxcHFzQjdwenQ1VUhGVE1RcHJ2TGZlTVVjMmt0dU93cnVjSWt0TmJXL1lUSkRiMUV4aStxVWNCeXJzCk9TRFUzZGNFT2lWVUxrNGZzcWJkRUtNNVljMEZoWFU1ODcxNmNyaXVkcVNwaE4xMGV4QnYwOVZsODNqUXZ3UFEKeGdaU0RuKzhhMEJ3OVp5MDh5NVMwdUVYVnRPSWNwMDFRQitXU2dNUjBpSlZBQXQyb3ZwNVZjM3BMb21wQnFEagprTDBNQzBzck9aanVoMlJROWpmMXBDY0NUU0dOelNCUGRMcVVhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tCMm5QODJFb2xYd1VZWFBGOUpMMFZNTlNvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXlDQUlKYmQ1SkxvY2I3NUNPT1UvRWdmaVUvR2JKd3laN0tpWjZISzJub0xZNDMvd01HcTZQCmhMUGt2aTg4VENkbGlEZi8yMzVuTERxRWNhRENVakZrRUw2MFhwUDJoa3REMTRxYkhOQ2hBQjQzZ0o3bXl2amYKRzFjMHJ1dGxwWklmaGhqaGcwcUlJY0ZlL29CUVlDOUZ4eWpsd2EzTlB6S3BRakhydUVIOXZPR2h6RFJJZzNadwpsUFVJTUJUTGtXalM5aWl2eG9mMDUxRmhTbFZUcVVwaTJwb2lXK0lPSERXTnFMQWMwUURKUjJDTFUrc09YeU51ClpWbEVJeTFNRkZaTXZ4dWdBY3B2Y3RJZ2g2a0RVR2grdkdmaXoralgrRmFOckV4WjBFMFZjREdMM3l0cG5sUDYKQ3BJNU5LZTlSRTN1YmZFNjdYY1Q2UXVFTmFmR2JmSHoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNU9jR0pHajJOUXVpQ002aHRMVEtvbkFjZkpxZDY4WWhhU2ExR0lBR2hHS0VROW5SCjdYYUVGRUxpQXY1SEpLVk01NllJRFRNcE02c3ZjOFFxZHhxanpYZmhscHN3RUxkdFEvSjBWTlBtOWxnSDJrSHEKQjVYUjE5cXBxc0I3cHp0NVVIRlRNUXBydkxmZU1VYzJrdHVPd3J1Y0lrdE5iVy9ZVEpEYjFFeGkrcVVjQnlycwpPU0RVM2RjRU9pVlVMazRmc3FiZEVLTTVZYzBGaFhVNTg3MTZjcml1ZHFTcGhOMTBleEJ2MDlWbDgzalF2d1BRCnhnWlNEbis4YTBCdzlaeTA4eTVTMHVFWFZ0T0ljcDAxUUIrV1NnTVIwaUpWQUF0Mm92cDVWYzNwTG9tcEJxRGoKa0wwTUMwc3JPWmp1aDJSUTlqZjFwQ2NDVFNHTnpTQlBkTHFVYVFJREFRQUJBb0lCQUV4Q2s0OUowTXozWlRKZAo5UTNKTmNGTWJKRXV5ZklrL2ppVUJyMTAyYmI5UTJkL2lDcisweDRVOGt0Zy83Njd1NVZwZ1VFMGpFT0VncmlrCjRDanlIU1IxRGhrbzlxaDdFOUlSVXFSNFBIaFI5N3ZGUGZ6czh3NWc4U25NR3VZcU1FNldrc3JCMkFiMWt2Y0QKN0xDY3FVRkRVODh4RzBpY2ZJbDFzV2RYVTVxQkNnc3M3L2QxbzlxK3U0S3JUREdaMTZrOFNLb1hDQk03d2VYVwowMnBNU2FyRGNZRzhPOE5QSlBUQitDRUdqRW5LSGJZNUZhNjd4d1p0bDU2UkRuQitCNUtKTWJtbE4yeGFCKytwCmFHZGh1Nmh2b3lnQ1hVcEVZeVBMWDFsUFZvN3ZXelA0cHI5TlVwOFZEWE9QY2o4T2dSWXFJUGREVzh5TzhtdnkKVi92U3R5RUNnWUVBNXEwWEZoZEhYa0FYYTlkc2ZaUHk2dnM0RXN2S3JmbWRBRjhZa0hMM0lmQ3QvTjRwSmpvaQpIRENGRjEyK0xqNzdiUG9hZlZCSWpFUzFDMHVWV1cvclIrdFRjd0prVG4zZkpUTGtoeVRiclVzSkl4Q2xvZmcxCjRrbmVUek5uM2YzK0xIVzBsM1VZdFNDQUR0aEYyd0xodHR6RDZ3Umk4ZjJnNU5FL3EvYWY5NFVDZ1lFQS9nZ1cKQVA1WjdieHA2RDBmYTZOMFRrT1hrZncvMEtDV0EwMVRxb3VLcXEvTmNLWlNJVTBXNzZqeEcxRDhRaTdlYmlkRwpBQTAxZ21vNkpjaXZneGRWWEp2NlB6S2kvcmRua2E3UFp1MXhhZXVYZU9ibEd2Ky9lVEQxUzRySjJOY0oydTk1ClNxMlhnM0Y5K29qOXBzQ09Vem9JdVBxL0xIbDkvN0MyWEJZZXRKVUNnWUVBc1p1OEZzbzlyUmZ6OEppaGM5OGkKUGtMSFhkR0RjSWlzbGNpaWhUVy9pbVpoMER6TnVoMHdmanZ0Zlp3ei9pK0lMdFF5NlNHVGVreThpTUhkY0V0NApBSnYwV0swU3hreXNMMXdNRVBJVUlrMlA3MnUxM0F2Y2tTc0cvRHc4VVBScmE1Z0ZRRWhzaWFsSWNDV2RRNC9vCmNuOXdhZGVxeDEvZExkRGZFV3lHcG5FQ2dZRUFnY3NGMnhvYVBxTFBCZTc4OTlVN0hxWGdjcUdNeFg3WFJ2YWkKY2ZmOE1MdkVYdk5MOFdIZS96SzFoang1dHlNVldQak9Ca2E1ZVZublBkanMvRERXMTR1R2IvWGlXL3kvZVNyMQpJMlRjVnI4ZDFKTThxZS9VR0FyUXVmaytxb0Vzc3VVNmR0SjlJSmJEUkZmc0tlQW1tQldGMFdXa2VnZlZQZWcvCk5JdkV3b1VDZ1lFQTM3UlFIeEYvZnFwZzJMaEdvMllScUtFV1c3TDdKcDgyYWUyaHl2MlRNaUx0MTFFVmRxc1gKbFhpVThRT3cwQXdtSXpCTklYZG1XUHpxeDk3MGQ3NGlub2tIVHBMa1dtTTE4dVJyWnJWeG02eDNjdU5LWUplZgpjUEQ2K0RvK1hRVFVmME9tUTU4VStTOGN3ZjhZUEFkeC9RUWZYc1BnaVpsQUxTNGVmY0MrUVJZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU16Sk4yVzdmSzRybmVnejRWMGg0SVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE1UQTNNelExTVZvWERUSTNNREV4TURBMwpNelExTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T2NHSkdqMk5RdWlDTTZodExUS29uQWNmSnFkNjhZaGFTYTFHSUFHaEdLRVE5blIKN1hhRUZFTGlBdjVISktWTTU2WUlEVE1wTTZzdmM4UXFkeHFqelhmaGxwc3dFTGR0US9KMFZOUG05bGdIMmtIcQpCNVhSMTlxcHFzQjdwenQ1VUhGVE1RcHJ2TGZlTVVjMmt0dU93cnVjSWt0TmJXL1lUSkRiMUV4aStxVWNCeXJzCk9TRFUzZGNFT2lWVUxrNGZzcWJkRUtNNVljMEZoWFU1ODcxNmNyaXVkcVNwaE4xMGV4QnYwOVZsODNqUXZ3UFEKeGdaU0RuKzhhMEJ3OVp5MDh5NVMwdUVYVnRPSWNwMDFRQitXU2dNUjBpSlZBQXQyb3ZwNVZjM3BMb21wQnFEagprTDBNQzBzck9aanVoMlJROWpmMXBDY0NUU0dOelNCUGRMcVVhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tCMm5QODJFb2xYd1VZWFBGOUpMMFZNTlNvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXlDQUlKYmQ1SkxvY2I3NUNPT1UvRWdmaVUvR2JKd3laN0tpWjZISzJub0xZNDMvd01HcTZQCmhMUGt2aTg4VENkbGlEZi8yMzVuTERxRWNhRENVakZrRUw2MFhwUDJoa3REMTRxYkhOQ2hBQjQzZ0o3bXl2amYKRzFjMHJ1dGxwWklmaGhqaGcwcUlJY0ZlL29CUVlDOUZ4eWpsd2EzTlB6S3BRakhydUVIOXZPR2h6RFJJZzNadwpsUFVJTUJUTGtXalM5aWl2eG9mMDUxRmhTbFZUcVVwaTJwb2lXK0lPSERXTnFMQWMwUURKUjJDTFUrc09YeU51ClpWbEVJeTFNRkZaTXZ4dWdBY3B2Y3RJZ2g2a0RVR2grdkdmaXoralgrRmFOckV4WjBFMFZjREdMM3l0cG5sUDYKQ3BJNU5LZTlSRTN1YmZFNjdYY1Q2UXVFTmFmR2JmSHoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpsYnk3ZkpEWHpSRmpNWlBDdG9qNkF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE1UQTNNelExTVZvWERUSTNNREV4TURBMwpNelExTVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW4vSERHSEdld2hEZHJzdS93dGJHRElUVE4xcWwKaXVjdnVlZUJyOUhkdmtXNFBQdmJBOHdPY0Z4VU5PSmxpUVZUZGJ1VDNMbmdxMFlLT2Z4QjJHY2c4T0tQUWxyRQpQR1NWRjRXOHFiRWtCSHlrNTk1WERIeUZIRjhrMXFNSXp0ZlEyN1Mram9CZUJJZW0rVEorSFp4OCtkeGZhMDZECjVyVzMxbVBFSU9FUHlQcFRDZldESHNnb2VWU2ZkWFdpUzFub0tYMWFnenAreFZydFMvR2tTT0U4aEJUQk5KRGwKSW45UHhOaExmUjBSVUpBd24rRm1MZzdEcDdPOG5qdFVIdCtXUldTUTlZcU9LQjRORDU5d0VTRGR2QlQ4NEs2ZgpqSll5QVA3ZEdlSTdhblpabmFCRnVFSmRQczZqY0R2Vm5ZTlBydHBWTStGTEZCYTBVVEdGUEQ0RzFRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmlnZHB6L05oS0pWOEZHRnp4ZlNTOQpGVERVcURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBS0hzbzg3Y1lJV0ZoQTllWk5RL1p6eVo0UEtXN0FJc1B0R0o2YlJEN0F0QnAxQVAKckN3cnZBcjhxTVhMVXBlZCs4OVNBZFVJUHhZL2plREZ4bE9hMDdnalJESUdveVZVTlYvalE5UjFVZXBRVmFMdgpaZys0OHdyQjR0OW1leTNTS0Z1TmpJK3NFT1prdHRKaGxyZkhyRHA3NVpiSnROWnhQc2N0VWdqczZ4NytWRVpkCmRoMEtyV3ZIVUx3YXFqT2NxSTJmRGNBSGE1ZXlFa2R3Sk9XUjhNeXFmbmFlTU5VanE5Q2g4c0tzUVRsTVJsVE4KNDk3cnV2UUpWZlVDZW15dTF1bWoySVZYQXJBY1RoaThyd3Vqb0s1OXY4eHhpWmp2OHRJY2lYbGwramdvRk1vRQpoNU9vTTkxVWd5Z1l3USt1Y1ZxL0xaaVBWa1hBVi9IV29QWnJVN2M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbi9IREdIR2V3aERkcnN1L3d0YkdESVRUTjFxbGl1Y3Z1ZWVCcjlIZHZrVzRQUHZiCkE4d09jRnhVTk9KbGlRVlRkYnVUM0xuZ3EwWUtPZnhCMkdjZzhPS1BRbHJFUEdTVkY0VzhxYkVrQkh5azU5NVgKREh5RkhGOGsxcU1JenRmUTI3Uytqb0JlQkllbStUSitIWng4K2R4ZmEwNkQ1clczMW1QRUlPRVB5UHBUQ2ZXRApIc2dvZVZTZmRYV2lTMW5vS1gxYWd6cCt4VnJ0Uy9Ha1NPRThoQlRCTkpEbEluOVB4TmhMZlIwUlVKQXduK0ZtCkxnN0RwN084bmp0VUh0K1dSV1NROVlxT0tCNE5ENTl3RVNEZHZCVDg0SzZmakpZeUFQN2RHZUk3YW5aWm5hQkYKdUVKZFBzNmpjRHZWbllOUHJ0cFZNK0ZMRkJhMFVUR0ZQRDRHMVFJREFRQUJBb0lCQVFDQVZsTC9DQndsQjdkNQpEQS9nWE1rcFBtTGtaWjJ6S1BISXI1UUY2ZFdOV1JBT0R1Q2IyVjQwbGtFUzloNFdwZWxqN0pFbWFSZDNGb29hCklPa01wU052WmJzaHVRY0Fsb3h6QldKdW5xNlIweG5XMnpicDAvaFMzWjBIaEdZSzRteTUvZnR4Q0Z0b014aXQKbC9CTi9rVGhrQXdZWkRXK0owMU5mMXZlTGZpbWY4RFp4WnY0QXFmUVB3WHBqNTdGUlFOKzg2MHRYUjZraFBkMApibGYxWmtCVGJJdUtiQUM4ZktDK3JTU3NvVW1vRHR1R2VMUGlDMnpvSGhiYUpvU1hySVFYRjQ2MWlDTm1sOTdRCkJsNVltSWZPdnpkemIyRHRDS3ZiaGZlZjlCWHQzdGUvZU9VYVlSNjByWUJjQXpHbjlsRTk5ZUU0akVmSmQ0MUQKSWhjSWIySjVBb0dCQU01c3hyWkU1SWhVc1NZbkhHQUQwSmoxd2o1ajhEdnQ4Z3h4Tm0zUFZndWhndUdod0F4NgpMVmVPZFpBR2g2dVNHRHE3NGI4WlJHT3dkUWdkR0lPZ3F5VGVKQ21wZ21zUEhkVUY1MDhXNGlhR212SE0yUERPCkxsWGlvYUxUUUt6NGlUZVJPU29mNWV4Z0hsWkgyUUtLNFF0c2JUWGtPekRMOUt5RGhnMVBhWVhYQW9HQkFNWmIKVUVqNUYyVWdUNy9mYy9iZHp6dVMxeVB4L0NwSE53d2l3eXpnTzV0UXlEQXRQT0xINy83Z0pCSmZLRzBIc1p5bwoxRWp0SUs4SElVUmpaTzVRa3hVT0lFRTQ1VVF5cmV0em90cFlRWFdaUGErb3NPTUpRR25JWWZHNGJCTWtvQUM2Cmxac3ZWVWVDc0NqNFJWQ2pUc0JiMHJuWWZ5ODhYV1BVTFVpVEJPc3pBb0dBZDlhZ21pcHV2bExrc1RDZGdZUlYKY3FlaVNCUSs0SnZvSEo4UktUam9URUpNdUc3dURwQlRpSFEwL2hNOGFqZWJoMldSemg1K0hKM1JvNDg0cnhuMApvYWV4T05xbTB6NW9aRVpVSGc4NzVYL1pyaXp0ZVFkSjBTU01EL295bnZoK3VOcS9aQncyb0Q3QS9mZ2lIUjdCClBaK0oyM0tQaG1teHR3RjRMbnYrMStzQ2dZRUFzMEZ1U3FRaENsaXErWUVjc1dvK2oxM2lZeSthYlRLeWdwc2YKdXZ4aG9iamRVUHh3MjVsSVFCT2JSYWNOUjRyK2JjNzlHWEtDYU9xT205a2ZLMmRScEdPQnJxK1dNWTJETXhicgpnMXJpdlQzaFMwK3RtMStQQUlvQVNZd2F6eW40RnZDSHB4aWRmdVNTQWxScmY3WTF3d3k0WVE5UDBRWkNkNmNWCnpWSmZ6WlVDZ1lCT0JlcTdmY0FGRzZLbVpiVDNGUWo5K1NITktjZ3MyUStJQ2JLTFVIRTFMdVdmN3R0VGZYS1MKUDBFNmp0ZFQ4djQvM3ZuMS9oc1hrZUJTMUFCb2xEWk1GNDRuSWtTU2oyVE1uYmhoa0FaWmFXZkJqZk9Vb25ZMApSTUcwZEVDREhjK3pMWWxhczdUMldtWEFMQkdJR3dFRHYrRytaT1pBRXNSamhNWUtDSU4vaXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU16Sk4yVzdmSzRybmVnejRWMGg0SVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE1UQTNNelExTVZvWERUSTNNREV4TURBMwpNelExTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1T2NHSkdqMk5RdWlDTTZodExUS29uQWNmSnFkNjhZaGFTYTFHSUFHaEdLRVE5blIKN1hhRUZFTGlBdjVISktWTTU2WUlEVE1wTTZzdmM4UXFkeHFqelhmaGxwc3dFTGR0US9KMFZOUG05bGdIMmtIcQpCNVhSMTlxcHFzQjdwenQ1VUhGVE1RcHJ2TGZlTVVjMmt0dU93cnVjSWt0TmJXL1lUSkRiMUV4aStxVWNCeXJzCk9TRFUzZGNFT2lWVUxrNGZzcWJkRUtNNVljMEZoWFU1ODcxNmNyaXVkcVNwaE4xMGV4QnYwOVZsODNqUXZ3UFEKeGdaU0RuKzhhMEJ3OVp5MDh5NVMwdUVYVnRPSWNwMDFRQitXU2dNUjBpSlZBQXQyb3ZwNVZjM3BMb21wQnFEagprTDBNQzBzck9aanVoMlJROWpmMXBDY0NUU0dOelNCUGRMcVVhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0tCMm5QODJFb2xYd1VZWFBGOUpMMFZNTlNvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXlDQUlKYmQ1SkxvY2I3NUNPT1UvRWdmaVUvR2JKd3laN0tpWjZISzJub0xZNDMvd01HcTZQCmhMUGt2aTg4VENkbGlEZi8yMzVuTERxRWNhRENVakZrRUw2MFhwUDJoa3REMTRxYkhOQ2hBQjQzZ0o3bXl2amYKRzFjMHJ1dGxwWklmaGhqaGcwcUlJY0ZlL29CUVlDOUZ4eWpsd2EzTlB6S3BRakhydUVIOXZPR2h6RFJJZzNadwpsUFVJTUJUTGtXalM5aWl2eG9mMDUxRmhTbFZUcVVwaTJwb2lXK0lPSERXTnFMQWMwUURKUjJDTFUrc09YeU51ClpWbEVJeTFNRkZaTXZ4dWdBY3B2Y3RJZ2g2a0RVR2grdkdmaXoralgrRmFOckV4WjBFMFZjREdMM3l0cG5sUDYKQ3BJNU5LZTlSRTN1YmZFNjdYY1Q2UXVFTmFmR2JmSHoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlpS0hYell4dzlJaEI3VlhTMGJvUDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE1UQTNNelExTVZvWERUSTNNREV4TURBMwpNelExTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5QenRZdUVVQlM3VURnSVNIUUgKVnVjc1RCQlVLUmpoK1MxWm9US0FQbmtvWUExaDNBZHczTzg0VGVJWS85ZzIyRjJnYnhoRkNyV1hRNWs1b3hrawpTY0pyaGloWFFmcXZyd0F5VmtvL1hQR0VONXpFZFBFQm92YXU5MkMrNTh3WTRicHM3RVh2YlloaDdnTHo2dk1IClhZdlNUa2tDZ25HVjlNbUl4MU9DMkFHNFJiTWZFU3Foajc2MFFhTWZZcUVidTdTZzhKVkpHaEEyRDI3QXVoL1IKR0xtdUxjeXV2U3BQVHg1RHR0WldvQWVXbFRkT0FnUFFZdDJjMlNMOTl6aDlzRldldnVyNG9lK3lGYmIwTXFQcgpDMG1NcHdGb0FaYXJLZzZvSGY0aFBlYnZkYjdacVRRZ284MTY1N20zVzBmNDlKYXFydjdEVkpRME53OHR5N1JmCk41OENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVlvSGFjL3pZU2lWZgpCUmhjOFgwa3ZSVXcxS2d3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUVPcEZoZmVid3hKUHJqTlNkbUR0aVB1YWJ2K3oKNW13ZkMzU3JORDVDVkZkRVljdS84QXorVW0zMGZNRVViZm9VcTF1UjE1aGhDQ0RuT1dpL2NkNEN3V1BtbVJsQQprbUZRblVzWEtVbThiU01HUXUwMXArRUZFc0IxTDBVMkNiaGVQWTNVQlBQSHJZYzdaU0xYSDMwcy9JKzZzemxmCkFEMFREU0pJWjNJOGduY1BiVFkxemgxOVR5Q2JOMWJja2NhMnZ4bFZ6anNQUzJWbHkyQW5ZOXhPZHlQK1RSaGgKcUZBcmtGQzBHZGhBU2d3OVkzRUxmNFRGWnZQclhjU3dIWGJnUHllbTEzVURmcGNCc3JzZGpkaE1qcmJjU21mcApTbjlZdGVwb2xUQ25ldDREUDB2OTFwQy9pUG9CY2hCcXMvcGRYSkxQU2dzVmpyTGZ5K25VS1oxOUtBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMC9PMWk0UlFGTHRRT0FoSWRBZFc1eXhNRUZRcEdPSDVMVm1oTW9BK2VTaGdEV0hjCkIzRGM3emhONGhqLzJEYllYYUJ2R0VVS3RaZERtVG1qR1NSSndtdUdLRmRCK3ErdkFESldTajljOFlRM25NUjAKOFFHaTlxNzNZTDduekJqaHVtenNSZTl0aUdIdUF2UHE4d2RkaTlKT1NRS0NjWlgweVlqSFU0TFlBYmhGc3g4UgpLcUdQdnJSQm94OWlvUnU3dEtEd2xVa2FFRFlQYnNDNkg5RVl1YTR0eks2OUtrOVBIa08yMWxhZ0I1YVZOMDRDCkE5QmkzWnpaSXYzM09IMndWWjYrNnZpaDc3SVZ0dlF5bytzTFNZeW5BV2dCbHFzcURxZ2QvaUU5NXU5MXZ0bXAKTkNDanpYcm51YmRiUi9qMGxxcXUvc05VbERRM0R5M0x0RjgzbndJREFRQUJBb0lCQVFDQTJWcFhTNE5uWnd2NApWRWkvaUtxeTlJSDFOMFNZcE45WFMzS3NnYnY0NmF1aTF3ZnMyaGJsc3FQZVBIWmtXY3NrOStBeHI5ODN6NUkvCnR3Tkl5SCt5bXEwL0h2UzBVbE1mMm5vTXZ3SmdySkVtVTJRSUU0ZWZVWFIvc3U2MWE3Ym1IMHR2cElOQThzKy8KcWNyK0hVOG9MaHg3VS9RNjJ2K3ArT1c4QmdJTTRINHk0YlBGUG0wSGEyeUhPcGZtY0FFWGpnZHVWWmhxSWxHeAp6bUFoWTR3QVcrdEFsY1hLZXR6a2ZCeE8vcWtWYjVLL0tCdzA4OXoyTnNNQjVBR2Q0UnFvY3liQ2ZMQjZvT2hXCksrZm8ra05kRnJiSGNFUFpFL2FnMFpNNURrRkVQWXN4bWpkNlZ2SEtGcW8vYXNCbGQrc25lMUVxYVptczNDSTMKeEVIUnVMRjVBb0dCQVBzWStqZHJOa1NrcDllQ084TXBYcmhBdnQ5ZlFTMWRPUFdobHBKejd6d2NXNVBOMVZtRwpOeElGZXcrSEJGRlo1MTZ0TGo3SldvRUh0UTFIOUVFYXFFVmJiZzZITTFObTFRTjlwNlBrdUFEUS9SWU1aWFo2CmxjMzhKVmFvODZORFZYc2ppbjhHWWRjNy9uNXFMYmU2RGRQdHYwbWdyR1hyVXV4SGMwOWJNcmh0QW9HQkFOZ1gKRTQ0bEtPMjZEZTVyZE8rSzZhcm50WWdxTHAxSm95QUIrQ1UzNTBBVGU0SlFhOWdiMWoxUnlPWW9Td0JCRE16RgpPOG5hU2ZoM1FLaitMRGFhTnZSRENhdjZTdWFDYmRvSjAxb2lvaTVweE1vemhHOFNwdVpxWmVvek9QWmNTUjM4CkdkaFlpV1ZGWmZJTlYzdDRiZTlMMTY5R25sczk4T1NRTlc5SkRJQzdBb0dCQUwwRWdtYnhaL3FvVUVpa21zUkIKQWpLRldxbmZsTHJIY0RkSG1vZElpcENmY0RpRk85T1dleUl2eWdGWVMrSEpZYWdkaWJCdDlwa202aDNEU3BVdgpzZmZ6NlpjNkkyTG5CL2NHd2dsWUJVTm9EdnhuL0lFQnFuOVREZkI4WWx0R05yVHBmam84M2E0ZVZXZG9HbDR4CnluTDhoNEN2V05lb0c5WU51em5EbHh6SkFvR0JBTlo0b09vV0s3YzNVSmh3Z3RFMW1KSU9BL2l2bFRCN1k3SmoKQWYwK3JRREYxWElUaTlZa1d0RGxtWFlHUzlwbXRlT1BacllET0NPcGlMMngrQVFCcjhWanUvZTdKaGYvSURTbQpSK1ZRTnBQR1dwRXQ3S1dwWjRtTjFMVk1QWjhYSFdMclVtT09ER0E5THQrOUtqVGI1SkQ3UDRreGwvNkxUY29zCjd6d1N6cHY5QW9HQUdUeEM5VldxRE1seEZnQUREQ1FlMDJnOS9NZ2VPKzc4dERSRmNjMHU5b2N0dG5vZFlNZkEKYjR2Vmc4dnlzODdpRTJ1YkY3cDI0ZE1GTVZjcm5LTmwzYUZhWm5xb0dQVFFFYUFuUlZVcGJadmVZUnc1alVpTApsNG4wQXhYalMvT3drQlVjeG10NUdwb05nS1ZHTlRLTjZSTTJVUXA5OVJRZnpXMjU4T25seWdZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.100
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        image: quay.io/cilium/operator-generic:v1.14.5@sha256:303f9076bdc73b3fc32aaedee64a14f6f44c8bb08ee9e3956d443021103ebe7a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.5@sha256:dbef89f924a927043d02b40c18e417c1ea0e8f58b44523b80fef7e3652db24d4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.100
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.100
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.100
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-envoy: unconfined
        prometheus.io/port: "9964"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
        command:
        - /usr/bin/cilium-envoy
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.100
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        image: quay.io/cilium/cilium-envoy:v1.26.6-ad82c7c56e88989992fd25d8d67747de865c823b@sha256:992998398dadfff7117bfa9fdb7c9474fefab7f0237263f7c8114e106c67baca
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-envoy
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
