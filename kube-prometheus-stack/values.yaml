nameOverride: kube-prometheus-stack
fullnameOverride: kube-prometheus-stack
namespaceOverride: kube-prometheus-stack
prometheus:
  annotations:
    traffic.sidecar.istio.io/includeInboundPorts: ""
    traffic.sidecar.istio.io/includeOutboundIPRanges: ""
    proxy.istio.io/config: |
      proxyMetadata:
        OUTPUT_CERTS: /etc/istio-output-certs
    sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]' # mount the shared volume at sidecar proxy
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: hostpath
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    volumes:
      - name: istio-certs
        emptyDir:
          medium: Memory
    volumeMounts:
      - name: istio-certs
        mountPath: /etc/prom-certs/
        readOnly: true
defaultRules:
  create: false
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: true
    kubeSchedulerRecording: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
grafana:
  enabled: true
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: utc
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
      isDefaultDatasource: true
      uid: prometheus
      createPrometheusReplicasDatasources: false
      label: grafana_datasource
      labelValue: '1'
  service:
    portName: http-web
    type: ClusterIP
  serviceMonitor:
    enabled: true
    path: '/metrics'
    interval: ''
    scheme: http
    tlsConfig: {}
    scrapeTimeout: 30s
nodeExporter:
  enabled: true
